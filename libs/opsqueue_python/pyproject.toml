[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend="maturin"

[project]
name = "opsqueue"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python"
module-name = "opsqueue.opsqueue_internal"

[tool.pytest.ini_options]
# We ensure tests never rely on global state,
# by running them in a random order, and in parallel:
addopts = "--random-order --workers=auto"
# NOTE: We rely on `pytest-parallel` rather than `pytest-xdist`
# since we currently rely on `multiprocessing`'s `fork` strategy,
# which is incompatible
# since pytest-xdist always spawns threads internally
# c.f. https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods
